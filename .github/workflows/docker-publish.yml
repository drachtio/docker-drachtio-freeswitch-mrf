name: Docker

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Environment Variables
        id: env_vars
        run: |
          for var in cmakeVersion grpcVersion libwebsocketsVersion speechSdkVersion spandspVersion sofiaVersion awsSdkCppVersion freeswitchModulesVersion freeswitchVersion; do
            value=$(grep "$var" .env | cut -d'=' -f2)
            echo "$var=$value" >> $GITHUB_OUTPUT
          done
        shell: bash

      - name: prepare tag
        id: prepare_tag
        run: |
          IMAGE_ID=drachtio/drachtio-freeswitch-mrf

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          echo "image_id=$IMAGE_ID" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "drachtio/freeswitch-builder"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ steps.prepare_tag.outputs.image_id }}:${{ steps.prepare_tag.outputs.version }}
          build-args: | 
            BUILD_CPUS=16
            CMAKE_VERSION=${{ steps.env_vars.outputs.cmakeVersion }}
            GRPC_VERSION=${{ steps.env_vars.outputs.grpcVersion }}
            LIBWEBSOCKETS_VERSION=${{ steps.env_vars.outputs.libwebsocketsVersion }}
            SPEECH_SDK_VERSION=${{ steps.env_vars.outputs.speechSdkVersion }}
            SPANDSP_VERSION=${{ steps.env_vars.outputs.spandspVersion }}
            SOFIA_VERSION=${{ steps.env_vars.outputs.sofiaVersion }}
            AWS_SDK_CPP_VERSION=${{ steps.env_vars.outputs.awsSdkCppVersion }}
            FREESWITCH_MODULES_VERSION=${{ steps.env_vars.outputs.freeswitchModulesVersion }}
            FREESWITCH_VERSION=${{ steps.env_vars.outputs.freeswitchVersion }}
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
